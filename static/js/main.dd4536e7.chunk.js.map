{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonInfo.tsx","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonInfo","person","people","activePerson","setActivePerson","name","sex","born","died","fatherName","motherName","slug","mother","find","parent","father","classNames","to","onClick","PeopleTable","useState","setPeople","hasError","setHasError","isLoading","setIsLoading","getPeopleFromsServer","peopleFromServer","useEffect","length","map","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dd4536e7.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  people: Person[];\n  activePerson: string;\n  setActivePerson: (valuse: string) => void;\n};\n\nexport const PersonInfo:React.FC<Props> = ({\n  person,\n  people,\n  activePerson,\n  setActivePerson,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  const mother = people.find(parent => person.motherName === parent.name);\n  const father = people.find(parent => person.fatherName === parent.name);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': activePerson === slug },\n      )}\n    >\n      <td>\n        <Link\n          to={`#/people/${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n          onClick={() => setActivePerson(slug)}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <Link\n              to={`#/people/${mother.slug}`}\n              className=\"has-text-danger\"\n              onClick={() => setActivePerson(mother.slug)}\n            >\n              {motherName}\n            </Link>\n          )\n          : (<>{motherName || '-'}</>)}\n      </td>\n      <td>\n        {father\n          ? (\n            <Link\n              to={`#/people/${father.slug}`}\n              onClick={() => setActivePerson(father.slug)}\n            >\n              {fatherName}\n            </Link>\n          )\n          : (<>{fatherName || '-'}</>)}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PersonInfo } from './PersonInfo';\n\nexport const PeopleTable:React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [activePerson, setActivePerson] = useState('');\n\n  const getPeopleFromsServer = async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch (Error) {\n      setHasError(true);\n      setIsLoading(false);\n\n      setTimeout(() => {\n        setHasError(false);\n      }, 3000);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getPeopleFromsServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(hasError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          ))}\n\n          {!isLoading && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable\n              is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person: Person) => (\n                  <PersonInfo\n                    person={person}\n                    key={person.slug}\n                    people={people}\n                    activePerson={activePerson}\n                    setActivePerson={setActivePerson}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n\n          <Route\n            path=\"/\"\n            element={\n              <h1 className=\"title\">Home Page</h1>\n            }\n          />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route\n            path=\"/people\"\n            element={(<PeopleTable />)}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}